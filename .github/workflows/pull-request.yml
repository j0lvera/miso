name: Code Review with miso

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main ]

# Prevent multiple workflow runs for the same PR
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  code-review:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write # Required to comment on PRs
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for diff analysis
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Install miso
      run: |
        # Option 1: Install from source (if this is the miso repo)
        go build -o miso cmd/main/main.go
        
        # Option 2: Install from release (uncomment when published)
        # curl -L https://github.com/your-org/miso/releases/latest/download/miso-linux-amd64 -o miso
        # chmod +x miso
    
    - name: Validate configuration
      run: |
        if [ -f "miso.yml" ] || [ -f ".miso.yml" ]; then
          ./miso validate-config
        else
          echo "No miso configuration found, using defaults"
        fi
    
    - name: Review and Comment on PR
      if: github.event_name == 'pull_request'
      env:
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: ./miso github review-pr
    
    - name: Review recent changes (Push)
      if: github.event_name == 'push'
      env:
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      run: |
        echo "Reviewing recent changes in push to ${{ github.ref_name }}"
        
        # Get the base and head commits from the event payload
        BASE_SHA="${{ github.event.before }}"
        HEAD_SHA="${{ github.event.after }}"

        # For the first push to a new branch, 'before' is all zeros.
        # In this case, we diff against the empty tree.
        if [[ "${{ github.event.before }}" == '0000000000000000000000000000000000000000' ]]; then
          echo "Initial push detected. Comparing against empty tree."
          BASE_SHA=$(git hash-object -t tree /dev/null)
        fi
        
        echo "Reviewing changes between $BASE_SHA and $HEAD_SHA"
        
        # Review the diff
        ./miso diff "${BASE_SHA}..${HEAD_SHA}" > review-output.md
        
        echo "# 🍲 miso Code review - Recent Changes" > push-review.md
        echo "" >> push-review.md
        cat review-output.md >> push-review.md
    
    
    - name: Upload review artifacts
      uses: actions/upload-artifact@v4
      if: always() && github.event_name == 'push'
      with:
        name: code-review-output
        path: |
          *-review.md
          review-output.md
        retention-days: 30
